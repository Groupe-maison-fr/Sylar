stateRoot: '/app/data'
zpoolName: 'sylar'
zpoolRoot: '/sylar'
services:
  - name: mysql
    image: 'library/mariadb:10.5.13'
    labels:
      - name: labelName
        value: labelValue
    environments:
    - name: MYSQL_ROOT_PASSWORD
      value: sylar_root_password
    - name: MYSQL_USER
      value: sylar_user
    - name: MYSQL_PASSWORD
      value: sylar_password
    - name: MYSQL_INITDB_SKIP_TZINFO
      value: '1'
    - name: CLONE_NAME
      value: '=containerParameter.getName()'
    - name: CLONE_INDEX
      value: '=containerParameter.getIndex()'
    - name: CLONE_REPLICATED_FILESYSTEM
      value: '=containerParameter.getReplicatedFilesystem()'
    ports:
      - hostPort: '=(33306+containerParameter.getIndex())~"/tcp"'
        containerPort: '3306/tcp'
    lifeCycleHooks:
      preStartCommands:
        - executionEnvironment: host
          command: ['ls','/']
      postStartWaiters:
        - type: logMatch
          expression: '!Server socket created on IP!'
          timeout: 30
      postStartCommands:
        - executionEnvironment: host
          command: ['ls','/']
      postDestroyCommands:
        - executionEnvironment: host
          command: ['ls','/']
    mounts:
      - source: '=containerParameter.getReplicatedFilesystem()~"/data"'
        target: /var/lib/mysql
      - source: '=(configurationRoot)~"/"~((containerParameter.getIndex() === 0)?"mysql-master/etc/mysql/my.cnf":"mysql-replicate/etc/mysql/my.cnf")'
        target: /etc/mysql/my.cnf

  - name: postgresql
    image: 'postgres:14.8-alpine3.18'
    environments:
    - name: POSTGRES_PASSWORD
      value: password
    - name: PGDATA
      value: /var/lib/postgresql/data/pgdata
    - name: CLONE_NAME
      value: '=containerParameter.getName()'
    - name: CLONE_INDEX
      value: '=containerParameter.getIndex()'
    - name: CLONE_REPLICATED_FILESYSTEM
      value: '=containerParameter.getReplicatedFilesystem()'
    ports:
      - hostPort: '=(25432+containerParameter.getIndex())~"/tcp"'
        containerPort: '5432/tcp'
    lifeCycleHooks:
      postStartWaiters:
        - type: logMatch
          expression: '!database system is ready to accept connections!'
          timeout: 30
    mounts:
      - source: '=containerParameter.getReplicatedFilesystem()'
        target: /var/lib/postgresql/data
commands:
  - name: test1
    subCommands:
      - pwd
      - cd /tmp;pwd
  - name: test2
    subCommands:
      - cd /var;pwd
